{"version":3,"sources":["components/Form.js","components/NamesnNum.js","components/NumSection.js","services/services.js","components/Notification.js","app.js","index.js"],"names":["Form","props","onSubmit","onsubmit","value","newname","onChange","handlename","newnumber","handlenumber","type","NamesnNum","del","name","number","id","key","onClick","deletePerson","NumSection","heading","arr","map","el","baseURL","newPersons","axios","post","then","response","data","delete","get","newnote","put","Notification","className","msg","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filtered","setFiltered","error","setError","useEffect","console","log","Service","catch","err","setTimeout","event","target","replace","length","objarr","toLowerCase","includes","push","preventDefault","indexOf","renote","concat","JSON","parse","request","message","window","confirm","element","find","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb038189.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n\r\n const Form=(props)=>{\r\n     return(\r\n        <form onSubmit={props.onsubmit}>\r\n        <h2>add new number</h2>\r\n        <div>\r\n          name: <input value={props.newname} onChange={props.handlename} />\r\n        </div>\r\n        <div>\r\n          number: <input value={props.newnumber} onChange={props.handlenumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n     )\r\n }\r\nexport default Form","import React from \"react\";\r\n\r\nconst NamesnNum = (props) => {\r\n   return props.del?(\r\n    <li>\r\n      {props.name} {props.number}<button id={props.id} key={props.id} onClick={props.deletePerson}> delete</button>\r\n    </li>\r\n  ):(\r\n    <li>\r\n      {props.name} {props.number}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NamesnNum","import React from \"react\";\r\n\r\nimport NamesnNum from \"./NamesnNum\"\r\nconst NumSection=(props)=>{\r\n    return(\r\n        <div>\r\n    <h2>{props.heading}</h2>\r\n      <ul>\r\n        {props.arr.map((el) => (\r\n       \r\n          <NamesnNum id={el.id} deletePerson={props.deletePerson} key={el.name} name={el.name} number={el.number} del={props.del}/>\r\n        ))}\r\n      </ul></div>)\r\n}\r\nexport default NumSection;","import axios from \"axios\";\r\nconst baseURL=\"/api/persons/\"\r\n//const baseURL = \"https://blooming-ravine-62139.herokuapp.com/api/persons/\";\r\n\r\n\r\n const getPerson=(id)=>{\r\n     const request = axios.get(baseURL+id);\r\n     return request.then(response=>response.data);\r\n }\r\nconst addPerson=(newPersons)=>{\r\n          const request =axios.post(baseURL,newPersons)\r\n          return request.then(response => {return response.data})\r\n}\r\n\r\nconst deletePerson=(id)=>{\r\n  const request=  axios.delete(baseURL+id);\r\n    return request.then(response=>response.data);\r\n}\r\n\r\nconst getAll=()=>{\r\n   const request=  axios.get(baseURL)\r\n        return request.then((data)=> data.data);\r\n}\r\nconst updatePerson=(newnote)=>{\r\n    const request = axios.put(baseURL+newnote.id,newnote);\r\n    return request.then(data=>{return data.data});\r\n}\r\nexport default {addPerson,deletePerson,getAll,updatePerson,getPerson}","import React from \"react\";\r\nimport '../index.css';\r\n\r\nconst Notification = (props) => {\r\n    \r\n  if (props.props===null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className={props.props.type}>\r\n     {props.props.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, {\n    useState,\n    useEffect\n} from \"react\";\nimport Form from \"./components/Form\";\nimport NamesnNum from \"./components/NamesnNum\";\nimport NumSection from \"./components/NumSection\";\nimport Service from \"./services/services.js\";\nimport Notification from \"./components/Notification\";\nimport \"./index.css\";\nconst App = () => {\n    //fetch persons initial data from db.json\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [filtered, setFiltered] = useState([]);\n    const [error, setError] = useState({});\n\n    useEffect(() => {\n        console.log(\"effect\");\n        Service.getAll()\n            .then((data) => setPersons(data))\n            .catch((err) => {\n                setError({\n                    msg: \"Could not get data. Please check your internet connection\",\n                    type: \"red\"\n                });\n                setTimeout(() => {\n                    setError(null);\n                }, 5000);\n\n\n            });\n    }, []);\n\n    const exists = (name) => {\n        let arr = persons.map((el) => el.name.toLowerCase() === name.toLowerCase());\n        return arr.indexOf(true) + 1;\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (!exists(newName) && newName.length > 0) {\n            const newPersons = {\n                name: newName,\n                number: newNumber,\n            };\n\n            //ADD PERSON DETAILS TO SERVER\n            Service.addPerson(newPersons)\n                .then(\n                    (renote) => {\n                        console.log(renote);\n                        setPersons(persons.concat(renote));\n                        setError({\n                            msg: `${renote.name} has been added to the server`,\n                            type: 'green'\n                        });\n                        setTimeout(() => {\n                            setError(null);\n                        }, 5000);\n                    }\n                ).catch(\n                    err =>{ setError({\n                        msg: JSON.parse(err.response.request.response).error.message,\n                        type: 'red'\n                    }); setTimeout(() => {\n                        setError(null);\n                    }, 5000);\n\n                          });\n            //adding person to server done\n\n            setNewNumber(\"\");\n            setNewName(\"\");\n        } else {\n            const result = window.confirm(\n                `${newName} already exists. Do you want to update it?`\n            );\n            if (result) {\n                const element = persons.find((el) => el.name == newName);\n                Service.updatePerson({\n                        ...element,\n                        number: newNumber\n                    })\n                    .then((data) => {\n                        setPersons(persons.map((el) => (el.id == data.id ? data : el)));\n                    })\n                    .catch(\n                    err =>{ setError({\n                        msg: JSON.parse(err.response.request.response).error.message,\n                        type: 'red'\n                    }); setTimeout(() => {\n                        setError(null);\n                    }, 5000);\n\n                          });\n                setNewName(\"\");\n                setNewNumber(\"\");\n            }\n            setNewName(\"\");\n            setNewNumber(\"\");\n        }\n    };\n\n    const deletePerson = (event) => {\n        let id = event.target.id;\n        let result = window.confirm(\n            `Delete ${persons.find((el) => el.id == event.target.id).name}?`\n        );\n\n        if (result) {\n            Service.deletePerson(event.target.id)\n                .then((response) => {\n                    const newPersons = persons.filter((el) => el.id != id);\n                    setPersons(newPersons);\n                    setError({\n                        msg: `${persons.find((el) => el.id == id).name} has been removed from the server`,\n                        type: \"green\"\n                    });\n                    setTimeout(() => {\n                        setError(null);\n                    }, 5000);\n\n                    //Service.getAll().then(data=>setPersons(data))\n                }).catch((err) => {\n                    console.log(err);\n                    setError({\n                        msg: `Person ${persons.find((el) => el.id == id).name} has already been removed from the server`,\n                        type: 'red'\n                    });\n                    setTimeout(() => {\n                        setError(null);\n                    }, 5000);\n                })\n        }\n    };\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    };\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    };\n\n    const handleFiltering = (event) => {\n        if (event.target.value.replace(\" \", \"\").length > 0) {\n            const name = event.target.value;\n            let objarr = [];\n            persons.map((el) => {\n                if (el.name.toLowerCase().includes(name.toLowerCase())) {\n                    objarr.push({\n                        name: el.name,\n                        number: el.number\n                    });\n                }\n                setFiltered(objarr);\n            });\n        } else {\n            setFiltered([]);\n        }\n    };\n\n    return ( <\n        div >\n        <\n        Notification props = {\n            error\n        }\n        /> <\n        h2 > Phonebook < /h2> <\n        div >\n        filter shown with < input onChange = {\n            handleFiltering\n        }\n        /> < /\n        div >\n\n        <\n        ul > {\n            filtered.map((el) => ( <\n                NamesnNum key = {\n                    el.name\n                }\n                name = {\n                    el.name\n                }\n                number = {\n                    el.number\n                }\n                del = {\n                    false\n                }\n                />\n            ))\n        } <\n        /ul> <\n        Form onsubmit = {\n            handleSubmit\n        }\n        newname = {\n            newName\n        }\n        newnumber = {\n            newNumber\n        }\n        handlename = {\n            handleNameChange\n        }\n        handlenumber = {\n            handleNumberChange\n        }\n        /> <\n        NumSection arr = {\n            persons\n        }\n        heading = {\n            \"Numbers\"\n        }\n        deletePerson = {\n            deletePerson\n        }\n        del = {\n            true\n        }\n        /> < /\n        div >\n    );\n};\n\nexport default App;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}